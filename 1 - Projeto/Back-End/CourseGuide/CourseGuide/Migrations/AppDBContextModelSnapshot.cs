// <auto-generated />
using CourseGuide.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CourseGuide.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.ReservationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idreservation");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateAt")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("createat");

                    b.Property<string>("DateFinish")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("datefinish");

                    b.Property<string>("DateReservation")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("datereservation");

                    b.Property<int>("IdTable")
                        .HasColumnType("integer");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("statusreservation");

                    b.Property<string>("TimeDuration")
                        .IsRequired()
                        .HasMaxLength(23)
                        .HasColumnType("character varying(23)")
                        .HasColumnName("timeduration");

                    b.Property<string>("UpdateAt")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("updateat");

                    b.Property<decimal>("ValueReservation")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("valuereservation");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.HasIndex("IdUser");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.RestaurantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idrestaurant");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailRestaurant")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("emailrestaurant");

                    b.Property<int>("IdOwner")
                        .HasColumnType("integer")
                        .HasColumnName("idowner");

                    b.Property<string>("NameRestaurant")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("namerestaurant");

                    b.Property<string>("PhoneRestaurant")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phonerestaurant");

                    b.HasKey("Id");

                    b.HasIndex("IdOwner");

                    b.ToTable("restaurants");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.TableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtable");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AvailableTable")
                        .HasColumnType("boolean")
                        .HasColumnName("availabletable");

                    b.Property<string>("CapacityTable")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("capacitytable");

                    b.Property<string>("CodeTable")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numbertable");

                    b.Property<int>("IdRestaurant")
                        .HasColumnType("integer")
                        .HasColumnName("idrestaurant");

                    b.Property<string>("LocationTable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("locationtable");

                    b.Property<decimal>("ValueTable")
                        .HasColumnType("numeric")
                        .HasColumnName("valuetable");

                    b.HasKey("Id");

                    b.HasIndex("IdRestaurant");

                    b.ToTable("tables");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iduser");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("emailuser");

                    b.Property<string>("ImageProfile")
                        .HasColumnType("text")
                        .HasColumnName("imageprofile");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nameuser");

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("passworduser");

                    b.Property<string>("PhoneUser")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phoneuser");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailUser = "master@development.com",
                            ImageProfile = "",
                            NameUser = "Master",
                            PasswordUser = "99db87c3278f5eaa517260eaaa2b4b376be63d7f8a79c0f43992a493a3de8fc9",
                            PhoneUser = ""
                        });
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.ReservationModel", b =>
                {
                    b.HasOne("CourseGuide.Objects.Models.Entities.TableModel", "TableModel")
                        .WithMany("ReservationsModel")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseGuide.Objects.Models.Entities.UserModel", "UserModel")
                        .WithMany("ReservationsModel")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TableModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.RestaurantModel", b =>
                {
                    b.HasOne("CourseGuide.Objects.Models.Entities.UserModel", "OwnerModel")
                        .WithMany("RestaurantsModel")
                        .HasForeignKey("IdOwner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerModel");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.TableModel", b =>
                {
                    b.HasOne("CourseGuide.Objects.Models.Entities.RestaurantModel", "RestaurantModel")
                        .WithMany("TablesModel")
                        .HasForeignKey("IdRestaurant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RestaurantModel");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.RestaurantModel", b =>
                {
                    b.Navigation("TablesModel");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.TableModel", b =>
                {
                    b.Navigation("ReservationsModel");
                });

            modelBuilder.Entity("CourseGuide.Objects.Models.Entities.UserModel", b =>
                {
                    b.Navigation("ReservationsModel");

                    b.Navigation("RestaurantsModel");
                });
#pragma warning restore 612, 618
        }
    }
}
